version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://api:8080
    depends_on:
      - api
    networks:
      - app-network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/uptime_monitor'
      - 'SPRING_DATASOURCE_USERNAME=uptime-db'
      - 'SPRING_DATASOURCE_PASSWORD=uptime-dev'
      - 'SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect'
      - 'SPRING_JPA_HIBERNATE_DDL_AUTO=update'
      - 'SPRING_JPA_SHOW_SQL=true'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=uptime-db
      - POSTGRES_PASSWORD=uptime-dev
      - POSTGRES_DB=uptime_monitor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uptime-db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 